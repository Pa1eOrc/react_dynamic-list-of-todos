{"version":3,"sources":["enum/enum.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","selectedFilter","inputValue","setSelectedTodo","selectedTodo","updatedTodos","filter","todo","lowerCaseTitle","title","toLowerCase","Active","completed","Completed","includes","filteredTodos","className","map","todoIsSelect","id","type","onClick","TodoFilter","setSelectedFilter","setInputValue","onChange","e","target","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","Loader","TodoModal","useState","loading","setLoading","user","setUser","fetchUser","useCallback","a","fetchedUser","useEffect","href","email","name","App","setTodos","finally","length","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85fb69ec.chunk.js","sourcesContent":["export enum Filter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { Filter } from '../../enum/enum';\n\ntype Props = {\n  todos: Todo[],\n  selectedFilter: string,\n  inputValue: string,\n  setSelectedTodo: (todo: Todo) => void;\n  selectedTodo?: Todo,\n};\n\nfunction filteredTodos(\n  todos: Todo[],\n  selectedFilter: string,\n  inputValue: string,\n): Todo[] {\n  return todos.filter(todo => {\n    const lowerCaseTitle = todo.title.toLowerCase();\n\n    if (\n      (selectedFilter === Filter.Active && todo.completed)\n      || (selectedFilter === Filter.Completed && !todo.completed)\n    ) {\n      return false;\n    }\n\n    if (inputValue && !lowerCaseTitle.includes(inputValue.toLowerCase())) {\n      return false;\n    }\n\n    return true;\n  });\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedFilter,\n  inputValue,\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  const updatedTodos = filteredTodos(todos, selectedFilter, inputValue);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {updatedTodos.map(todo => {\n          const todoIsSelect = todo.id === selectedTodo?.id;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={todoIsSelect ? 'has-background-info-light' : ''}\n              key={todo.id}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              {todo.completed ? (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              ) : (\n                <td className=\"is-vcentered\" />\n              )}\n              <td className=\"is-vcentered is-expanded\">\n                <p className=\"has-text-danger\">{todo.title}</p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  title=\"Select todo\"\n                  onClick={() => setSelectedTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={todoIsSelect\n                      ? 'far fa-eye-slash' : 'far fa-eye'}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  setSelectedFilter: (filter: string) => void;\n  inputValue: string;\n  setInputValue: (value: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setSelectedFilter,\n  inputValue,\n  setInputValue,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            title=\"Select your option\"\n            onChange={(e) => setSelectedFilter(e.target.value)}\n          >\n            <option value=\"all\">\n              All\n            </option>\n            <option value=\"active\">\n              Active\n            </option>\n            <option value=\"completed\">\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {inputValue && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              title=\"Clear search button\"\n              onClick={() => setInputValue('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo?: Todo,\n  setSelectedTodo: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState<User>();\n\n  const fetchUser = useCallback(async (userId: number) => {\n    setLoading(true);\n\n    if (userId) {\n      try {\n        const fetchedUser = await getUser(userId);\n\n        setUser(fetchedUser);\n      } finally {\n        setLoading(false);\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      fetchUser(selectedTodo.userId);\n    }\n  }, [selectedTodo, fetchUser]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading && (\n        <Loader />\n      )}\n\n      {!loading && selectedTodo && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              title=\"close icon\"\n              onClick={() => setSelectedTodo()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className=\"has-text-danger\">\n                {selectedTodo.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedFilter, setSelectedFilter] = useState('all');\n  const [inputValue, setInputValue] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo>();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos().then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setSelectedFilter={setSelectedFilter}\n                inputValue={inputValue}\n                setInputValue={setInputValue}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (\n                <Loader />\n              )}\n\n              {!loading && todos.length > 0 && (\n                <TodoList\n                  todos={todos}\n                  selectedFilter={selectedFilter}\n                  inputValue={inputValue}\n                  setSelectedTodo={setSelectedTodo}\n                  selectedTodo={selectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={() => setSelectedTodo(undefined)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}